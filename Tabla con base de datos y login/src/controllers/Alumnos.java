/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package controllers;

import config.*;
import static config.Config.*;
import fontawesome.*;
import java.awt.*;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.*;
import models.*;
import static security.Validate.*;

/**
 *
 * @author Luis G
 */
public class Alumnos extends javax.swing.JFrame {

    /**
     * Creates new form Alumnos
     */
    private DefaultTableModel model;
    private ResultSet data;
    private final AlumnosModel ALUMNOS_MODEL;
    private int id;
    private boolean isUpdate;
    private FontAwesome fa;

    public Alumnos(Component component, int id, String titulo, boolean create, boolean read, boolean update, boolean delete) {
        initComponents();
        frameConfig(this, component);
        this.table.setEnabled(false);
        this.setResizable(false);
        this.pack();
        this.addWindowListener(new OfflineWindowListener());
        fa = new FontAwesome();
        fa.setIcon(regresar, "\uf060");
        isUpdate = false;
        model = new DefaultTableModel();
        ALUMNOS_MODEL = new AlumnosModel();
        this.titulo.setText(TITULO);
        user.setText("Usuario: " + session);
        agregar.setBackground(DEFAULT);
        eliminarPorId.setBackground(DANGER);
        model.addColumn("id");
        model.addColumn("Nombre");
        model.addColumn("Apellido Paterno");
        model.addColumn("Apellido Materno");
        model.addColumn("Sexo");
        model.addColumn("Edad");
        model.addColumn("Dirección");
        model.addColumn("Teléfono");
        model.addColumn("Correo");
        table.setModel(model);
        this.titulo.setText(titulo);
        this.id = id;
        loadData();
        permisos(create, read, update, delete);
    }

    public Alumnos() {
        initComponents();
        this.table.setEnabled(false);
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.pack();
        isUpdate = false;
        regresar.setVisible(false);
        model = new DefaultTableModel();
        ALUMNOS_MODEL = new AlumnosModel();
        this.titulo.setText(TITULO);
        user.setText("Usuario: " + session);
        agregar.setBackground(DEFAULT);
        eliminarPorId.setBackground(DANGER);
        model.addColumn("id");
        model.addColumn("Nombre");
        model.addColumn("Apellido Paterno");
        model.addColumn("Apellido Materno");
        model.addColumn("Sexo");
        model.addColumn("Edad");
        model.addColumn("Dirección");
        model.addColumn("Teléfono");
        model.addColumn("Correo");
        table.setModel(model);
        this.titulo.setText(TITULO);
        this.id = groupId;
        loadData();
    }

    private void loadData() {
        model.setNumRows(0);
        data = ALUMNOS_MODEL.getAlumnosByGroup(id);
        try {
            while (data.next()) {
                model.addRow(
                        new Object[]{
                            data.getString("id"),
                            data.getString("nombre"),
                            data.getString("apellido_paterno"),
                            data.getString("apellido_materno"),
                            data.getString("sexo"),
                            data.getInt("edad"),
                            data.getString("direccion"),
                            data.getString("telefono"),
                            data.getString("correo")
                        }
                );
            }
        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        card = new javax.swing.JPanel();
        formPanel = new javax.swing.JPanel();
        apellidoMaternoError = new javax.swing.JLabel();
        direccionLabel = new javax.swing.JLabel();
        edadError = new javax.swing.JLabel();
        direccion = new javax.swing.JTextField();
        direccionError = new javax.swing.JLabel();
        sexo = new javax.swing.JComboBox<>();
        sexoLabel = new javax.swing.JLabel();
        sexoError = new javax.swing.JLabel();
        telefonoLabel = new javax.swing.JLabel();
        telefono = new javax.swing.JTextField();
        telefonoError = new javax.swing.JLabel();
        nombreLabel = new javax.swing.JLabel();
        correoLabel = new javax.swing.JLabel();
        nombre = new javax.swing.JTextField();
        apellidoPaternoLabel = new javax.swing.JLabel();
        apellidoPaterno = new javax.swing.JTextField();
        apellidoMaternoLabel = new javax.swing.JLabel();
        correo = new javax.swing.JTextField();
        correoError = new javax.swing.JLabel();
        apellidoMaterno = new javax.swing.JTextField();
        edadLabel = new javax.swing.JLabel();
        edad = new javax.swing.JTextField();
        apellidoPaternoError = new javax.swing.JLabel();
        nombreError = new javax.swing.JLabel();
        agregar = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        eliminarPorId = new javax.swing.JButton();
        deleteId = new javax.swing.JTextField();
        eliminarRegistros = new javax.swing.JButton();
        titulo = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        user = new javax.swing.JLabel();
        actualizarTabla = new javax.swing.JButton();
        regresar = new javax.swing.JButton();
        actualizarAlumno = new javax.swing.JButton();
        updateId = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tabla de alumnos");
        setBackground(new java.awt.Color(255, 255, 255));

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));

        table.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Nombre", "Apellido Paterno", "Apellido Materno", "Sexo", "Edad", "Direccion", "Teléfono", "Correo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        formPanel.setBackground(new java.awt.Color(255, 255, 255));

        apellidoMaternoError.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        apellidoMaternoError.setForeground(new java.awt.Color(255, 0, 0));

        direccionLabel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        direccionLabel.setText("Dirección");

        edadError.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        edadError.setForeground(new java.awt.Color(255, 0, 0));

        direccion.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        direccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                direccionKeyReleased(evt);
            }
        });

        direccionError.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        direccionError.setForeground(new java.awt.Color(255, 0, 0));

        sexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "M", "F" }));

        sexoLabel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        sexoLabel.setText("Sexo");

        sexoError.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        sexoError.setForeground(new java.awt.Color(255, 0, 0));

        telefonoLabel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        telefonoLabel.setText("Teléfono");

        telefono.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        telefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                telefonoKeyReleased(evt);
            }
        });

        telefonoError.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        telefonoError.setForeground(new java.awt.Color(255, 0, 0));

        nombreLabel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        nombreLabel.setText("Nombre");

        correoLabel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        correoLabel.setText("Correo");

        nombre.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nombreKeyReleased(evt);
            }
        });

        apellidoPaternoLabel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        apellidoPaternoLabel.setText("Apellido Paterno");

        apellidoPaterno.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        apellidoPaterno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                apellidoPaternoKeyReleased(evt);
            }
        });

        apellidoMaternoLabel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        apellidoMaternoLabel.setText("Apellido Materno");

        correo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        correo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                correoKeyReleased(evt);
            }
        });

        correoError.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        correoError.setForeground(new java.awt.Color(255, 0, 0));

        apellidoMaterno.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        apellidoMaterno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                apellidoMaternoKeyReleased(evt);
            }
        });

        edadLabel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        edadLabel.setText("Edad");

        edad.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        edad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                edadKeyReleased(evt);
            }
        });

        apellidoPaternoError.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        apellidoPaternoError.setForeground(new java.awt.Color(255, 0, 0));

        nombreError.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        nombreError.setForeground(new java.awt.Color(255, 0, 0));

        agregar.setBackground(new java.awt.Color(56, 126, 245));
        agregar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        agregar.setForeground(new java.awt.Color(255, 255, 255));
        agregar.setText("Agregar");
        agregar.setBorder(null);
        agregar.setBorderPainted(false);
        agregar.setContentAreaFilled(false);
        agregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        agregar.setFocusPainted(false);
        agregar.setOpaque(true);
        agregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                agregarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                agregarMouseReleased(evt);
            }
        });
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        cancelar.setBackground(new java.awt.Color(245, 61, 61));
        cancelar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        cancelar.setForeground(new java.awt.Color(255, 255, 255));
        cancelar.setText("Cancelar");
        cancelar.setBorder(null);
        cancelar.setBorderPainted(false);
        cancelar.setContentAreaFilled(false);
        cancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelar.setFocusPainted(false);
        cancelar.setOpaque(true);
        cancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cancelarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cancelarMouseReleased(evt);
            }
        });
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout formPanelLayout = new javax.swing.GroupLayout(formPanel);
        formPanel.setLayout(formPanelLayout);
        formPanelLayout.setHorizontalGroup(
            formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formPanelLayout.createSequentialGroup()
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nombreLabel)
                            .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nombreError, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sexoError, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(formPanelLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sexoLabel)
                                    .addComponent(sexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(apellidoPaternoLabel)
                            .addComponent(apellidoPaternoError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(direccionLabel)
                            .addComponent(direccion, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(direccionError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(apellidoPaterno))
                        .addGap(18, 18, 18)
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(apellidoMaternoLabel)
                            .addComponent(apellidoMaternoError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(telefonoLabel)
                            .addComponent(telefono, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(apellidoMaterno)
                            .addComponent(telefonoError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(correoLabel)
                            .addComponent(edadLabel)
                            .addComponent(edad, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(edadError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(correo)
                            .addComponent(correoError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(formPanelLayout.createSequentialGroup()
                        .addComponent(agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(624, 624, 624))))
        );
        formPanelLayout.setVerticalGroup(
            formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formPanelLayout.createSequentialGroup()
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(nombreLabel)
                        .addGap(6, 6, 6)
                        .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(nombreError, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(sexoLabel)
                        .addGap(6, 6, 6)
                        .addComponent(sexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(sexoError, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(formPanelLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(edadLabel)
                        .addGap(6, 6, 6)
                        .addComponent(edad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(edadError, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(correoLabel)
                        .addGap(6, 6, 6)
                        .addComponent(correo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(correoError, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(formPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(formPanelLayout.createSequentialGroup()
                                .addComponent(apellidoMaternoLabel)
                                .addGap(6, 6, 6)
                                .addComponent(apellidoMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(apellidoMaternoError, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(telefonoLabel)
                                .addGap(6, 6, 6)
                                .addComponent(telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(telefonoError, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(formPanelLayout.createSequentialGroup()
                                .addComponent(apellidoPaternoLabel)
                                .addGap(6, 6, 6)
                                .addComponent(apellidoPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(apellidoPaternoError, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(direccionLabel)
                                .addGap(6, 6, 6)
                                .addComponent(direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(direccionError, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(7, 7, 7)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(81, 81, 81))
        );

        javax.swing.GroupLayout cardLayout = new javax.swing.GroupLayout(card);
        card.setLayout(cardLayout);
        cardLayout.setHorizontalGroup(
            cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardLayout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(formPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(2, 2, 2))
        );
        cardLayout.setVerticalGroup(
            cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(formPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3))
        );

        eliminarPorId.setBackground(new java.awt.Color(245, 61, 61));
        eliminarPorId.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        eliminarPorId.setForeground(new java.awt.Color(255, 255, 255));
        eliminarPorId.setText("Eliminar por id");
        eliminarPorId.setBorder(null);
        eliminarPorId.setBorderPainted(false);
        eliminarPorId.setContentAreaFilled(false);
        eliminarPorId.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        eliminarPorId.setFocusPainted(false);
        eliminarPorId.setOpaque(true);
        eliminarPorId.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                eliminarPorIdMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                eliminarPorIdMouseReleased(evt);
            }
        });
        eliminarPorId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarPorIdActionPerformed(evt);
            }
        });

        deleteId.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        eliminarRegistros.setBackground(new java.awt.Color(245, 61, 61));
        eliminarRegistros.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        eliminarRegistros.setForeground(new java.awt.Color(255, 255, 255));
        eliminarRegistros.setText("Eliminar todos los registros");
        eliminarRegistros.setBorder(null);
        eliminarRegistros.setBorderPainted(false);
        eliminarRegistros.setContentAreaFilled(false);
        eliminarRegistros.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        eliminarRegistros.setFocusPainted(false);
        eliminarRegistros.setOpaque(true);
        eliminarRegistros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                eliminarRegistrosMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                eliminarRegistrosMouseReleased(evt);
            }
        });
        eliminarRegistros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarRegistrosActionPerformed(evt);
            }
        });

        titulo.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo.setText("Título");

        user.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        user.setText("Usuario: ");

        actualizarTabla.setBackground(new java.awt.Color(50, 219, 100));
        actualizarTabla.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        actualizarTabla.setForeground(new java.awt.Color(255, 255, 255));
        actualizarTabla.setText("Actualizar tabla");
        actualizarTabla.setBorder(null);
        actualizarTabla.setBorderPainted(false);
        actualizarTabla.setContentAreaFilled(false);
        actualizarTabla.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        actualizarTabla.setFocusPainted(false);
        actualizarTabla.setOpaque(true);
        actualizarTabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                actualizarTablaMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                actualizarTablaMouseReleased(evt);
            }
        });
        actualizarTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarTablaActionPerformed(evt);
            }
        });

        regresar.setBackground(new java.awt.Color(56, 126, 245));
        regresar.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        regresar.setForeground(new java.awt.Color(255, 255, 255));
        regresar.setText("<=");
        regresar.setBorder(null);
        regresar.setBorderPainted(false);
        regresar.setContentAreaFilled(false);
        regresar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        regresar.setFocusPainted(false);
        regresar.setOpaque(true);
        regresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                regresarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                regresarMouseReleased(evt);
            }
        });
        regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regresarActionPerformed(evt);
            }
        });

        actualizarAlumno.setBackground(new java.awt.Color(50, 219, 100));
        actualizarAlumno.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        actualizarAlumno.setForeground(new java.awt.Color(255, 255, 255));
        actualizarAlumno.setText("Actualizar por id");
        actualizarAlumno.setBorder(null);
        actualizarAlumno.setBorderPainted(false);
        actualizarAlumno.setContentAreaFilled(false);
        actualizarAlumno.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        actualizarAlumno.setFocusPainted(false);
        actualizarAlumno.setOpaque(true);
        actualizarAlumno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                actualizarAlumnoMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                actualizarAlumnoMouseReleased(evt);
            }
        });
        actualizarAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarAlumnoActionPerformed(evt);
            }
        });

        updateId.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(user)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelLayout.createSequentialGroup()
                                .addComponent(card, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(14, 14, 14)
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(mainPanelLayout.createSequentialGroup()
                                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(actualizarAlumno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(eliminarPorId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(updateId, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                                            .addComponent(deleteId)))
                                    .addComponent(eliminarRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(regresar, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 907, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(actualizarTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(user)
                .addGap(3, 3, 3)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(regresar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(actualizarTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(actualizarAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(eliminarPorId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eliminarRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(154, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(card, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agregarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agregarMousePressed
        if (!isUpdate) {
            this.agregar.setBackground(DEFAULT_PRESSED);
        } else {
            this.agregar.setBackground(SECONDARY_PRESSED);
        }
    }//GEN-LAST:event_agregarMousePressed

    private void agregarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agregarMouseReleased
        if (!isUpdate) {
            this.agregar.setBackground(DEFAULT);
        } else {
            this.agregar.setBackground(SECONDARY);
        }
    }//GEN-LAST:event_agregarMouseReleased

    private void eliminarPorIdMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eliminarPorIdMousePressed
        this.eliminarPorId.setBackground(DANGER_PRESSED);
    }//GEN-LAST:event_eliminarPorIdMousePressed

    private void eliminarPorIdMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eliminarPorIdMouseReleased
        this.eliminarPorId.setBackground(DANGER);
    }//GEN-LAST:event_eliminarPorIdMouseReleased

    private void eliminarRegistrosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eliminarRegistrosMousePressed
        this.eliminarRegistros.setBackground(DANGER_PRESSED);
    }//GEN-LAST:event_eliminarRegistrosMousePressed

    private void eliminarRegistrosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eliminarRegistrosMouseReleased
        this.eliminarRegistros.setBackground(DANGER);
    }//GEN-LAST:event_eliminarRegistrosMouseReleased

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        if (!isUpdate) {
            submit();
        } else {
            update();
        }
        isUpdate = false;
    }//GEN-LAST:event_agregarActionPerformed

    private void eliminarRegistrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarRegistrosActionPerformed
        if (JOptionPane.showConfirmDialog(null, "Seguro que quiere eliminar toda la tabla?", "Eliminar tabla", 1) == 0) {
            ALUMNOS_MODEL.deleteAllById(id);
            loadData();
        }
    }//GEN-LAST:event_eliminarRegistrosActionPerformed

    private void eliminarPorIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarPorIdActionPerformed
        try {
            if (JOptionPane.showConfirmDialog(null, "Seguro que quiere eliminar el registro?", "Eliminar registro", 1) == 0) {
                ALUMNOS_MODEL.deleteById(id, Integer.parseInt(deleteId.getText()));
                loadData();
                deleteId.setText("");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "El id debe de ser un número :'v", "Error", 0);
        }
    }//GEN-LAST:event_eliminarPorIdActionPerformed

    private void actualizarTablaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizarTablaMousePressed
        actualizarTabla.setBackground(SECONDARY_PRESSED);
    }//GEN-LAST:event_actualizarTablaMousePressed

    private void actualizarTablaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizarTablaMouseReleased
        actualizarTabla.setBackground(SECONDARY);
    }//GEN-LAST:event_actualizarTablaMouseReleased

    private void actualizarTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarTablaActionPerformed
        loadData();
    }//GEN-LAST:event_actualizarTablaActionPerformed

    private void regresarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_regresarMousePressed
        this.regresar.setBackground(DEFAULT_PRESSED);
    }//GEN-LAST:event_regresarMousePressed

    private void regresarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_regresarMouseReleased
        this.regresar.setBackground(DEFAULT);
    }//GEN-LAST:event_regresarMouseReleased

    private void regresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regresarActionPerformed
        new TableList(this).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_regresarActionPerformed

    private void nombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreKeyReleased
        if (evt.getKeyCode() == 10) {
            submit();
        }
    }//GEN-LAST:event_nombreKeyReleased

    private void apellidoPaternoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_apellidoPaternoKeyReleased
        if (evt.getKeyCode() == 10) {
            submit();
        }
    }//GEN-LAST:event_apellidoPaternoKeyReleased

    private void apellidoMaternoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_apellidoMaternoKeyReleased
        if (evt.getKeyCode() == 10) {
            submit();
        }
    }//GEN-LAST:event_apellidoMaternoKeyReleased

    private void edadKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edadKeyReleased
        if (evt.getKeyCode() == 10) {
            submit();
        }
    }//GEN-LAST:event_edadKeyReleased

    private void direccionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_direccionKeyReleased
        if (evt.getKeyCode() == 10) {
            submit();
        }
    }//GEN-LAST:event_direccionKeyReleased

    private void telefonoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_telefonoKeyReleased
        if (evt.getKeyCode() == 10) {
            submit();
        }
    }//GEN-LAST:event_telefonoKeyReleased

    private void correoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_correoKeyReleased
        if (evt.getKeyCode() == 10) {
            submit();
        }
    }//GEN-LAST:event_correoKeyReleased

    private void actualizarAlumnoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizarAlumnoMousePressed
        actualizarAlumno.setBackground(SECONDARY_PRESSED);
    }//GEN-LAST:event_actualizarAlumnoMousePressed

    private void actualizarAlumnoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizarAlumnoMouseReleased
        actualizarAlumno.setBackground(SECONDARY);
    }//GEN-LAST:event_actualizarAlumnoMouseReleased

    private void actualizarAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarAlumnoActionPerformed
        if (!nombre.getText().equals("")
                || !apellidoPaterno.getText().equals("")
                || !apellidoMaterno.getText().equals("")
                || !edad.getText().equals("")
                || !direccion.getText().equals("")
                || !telefono.getText().equals("")
                || !correo.getText().equals("")) {

            if (JOptionPane.showConfirmDialog(null, "Seguro que quiere continuar sin guardar los datos?", "Actualizar datos", 1) == 0) {
                if (getAlumnoData()) {
                    isUpdate = true;
                    agregar.setText("Actualizar");
                    agregar.setBackground(SECONDARY);
                } else {
                    //JOptionPane.showMessageDialog(null, "El registro no existe", "error", 2);
                }
            }
        } else if (getAlumnoData()) {
            isUpdate = true;
            agregar.setText("Actualizar");
            agregar.setBackground(SECONDARY);
        } else {
            //JOptionPane.showMessageDialog(null, "El registro no existe", "error", 2);
        }
        //updateId.setText("");
    }//GEN-LAST:event_actualizarAlumnoActionPerformed

    private void cancelarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelarMousePressed
        cancelar.setBackground(DANGER_PRESSED);
    }//GEN-LAST:event_cancelarMousePressed

    private void cancelarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelarMouseReleased
        cancelar.setBackground(DANGER);
    }//GEN-LAST:event_cancelarMouseReleased

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        isUpdate = false;
        clearInputs();
        clearErrors();
        agregar.setText("Agregar");
        agregar.setBackground(DEFAULT);
        updateId.setText("");
    }//GEN-LAST:event_cancelarActionPerformed

    private boolean lgValidate() {
        boolean nombreValid, apellidoPaternoValid, apellidoMaternoValid, edadValid, direccionValid, telefonoValid, correoValid;
        //validación del nombre
        nombreValid = validateText(nombre, nombreError);
        //validación del apellido paterno
        apellidoPaternoValid = validateText(apellidoPaterno, apellidoPaternoError);
        //validación del apellido materno
        apellidoMaternoValid = validateText(apellidoMaterno, apellidoMaternoError);
        //validacion de la edad
        edadValid = validateNumber(edad, edadError);
        //validación de la dirección
        if (direccion.getText().equals("")) {
            direccionError.setText(NULL_DATA_ERROR);
            direccionValid = false;
        } else {
            direccionValid = true;
        }
        //validación del teléfono
        telefonoValid = validateNumber(telefono, telefonoError);
        //validación del correo
        correoValid = validateEmail(correo, correoError);
        if (nombreValid && apellidoPaternoValid && apellidoMaternoValid && edadValid
                && direccionValid && telefonoValid && correoValid) {
            return true;
        } else {
            return false;
        }
    }

    private void submit() {
        if (lgValidate()) {
            ALUMNOS_MODEL.insertAlumno(nombre.getText(), apellidoPaterno.getText(),
                    apellidoMaterno.getText(), sexo.getSelectedItem().toString(),
                    Integer.parseInt(edad.getText()), direccion.getText(),
                    telefono.getText(), correo.getText(), id
            );
            loadData();
            clearInputs();
        }
    }

    private boolean getAlumnoData() {
        boolean isData = false;
        try {
            ResultSet data = ALUMNOS_MODEL.getAlumnoById(Integer.parseInt(updateId.getText()), id);
            while (data.next()) {
                isData = true;
                nombre.setText(data.getString("nombre"));
                apellidoPaterno.setText(data.getString("apellido_paterno"));
                apellidoMaterno.setText(data.getString("apellido_materno"));
                sexo.setSelectedItem(data.getString("sexo"));
                edad.setText(data.getInt("edad") + "");
                direccion.setText(data.getString("direccion"));
                telefono.setText(data.getString("telefono"));
                correo.setText(data.getString("correo"));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "El id debe de ser un número :'v", "Error", 0);
        }
        clearErrors();
        return isData;
    }

    private void update() {
        if (lgValidate()) {
            ALUMNOS_MODEL.updateAlumno(nombre.getText(),
                    apellidoPaterno.getText(),
                    apellidoMaterno.getText(),
                    sexo.getSelectedItem().toString(),
                    Integer.parseInt(edad.getText()),
                    direccion.getText(),
                    telefono.getText(),
                    correo.getText(), id,
                    Integer.parseInt(updateId.getText())
            );
            loadData();
            clearInputs();
        }
        agregar.setBackground(DEFAULT);
        agregar.setText("Agregar");
        updateId.setText("");
    }

    private void clearInputs() {
        nombre.setText("");
        apellidoPaterno.setText("");
        apellidoMaterno.setText("");
        edad.setText("");
        direccion.setText("");
        telefono.setText("");
        correo.setText("");
    }

    private void clearErrors() {
        nombreError.setText("");
        apellidoPaternoError.setText("");
        apellidoMaternoError.setText("");
        edadError.setText("");
        direccionError.setText("");
        telefonoError.setText("");
        correoError.setText("");
    }

    private void permisos(boolean create, boolean read, boolean update, boolean delete) {
        if (!create) {
            card.setVisible(false);
        }
        if (!read) {
            table.setVisible(false);
        }
        if (!update) {
            actualizarAlumno.setVisible(false);
            updateId.setVisible(false);
        }
        if (!delete) {
            eliminarPorId.setVisible(false);
            deleteId.setVisible(false);
            eliminarRegistros.setVisible(false);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Alumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Alumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Alumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Alumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Alumnos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizarAlumno;
    private javax.swing.JButton actualizarTabla;
    private javax.swing.JButton agregar;
    private javax.swing.JTextField apellidoMaterno;
    private javax.swing.JLabel apellidoMaternoError;
    private javax.swing.JLabel apellidoMaternoLabel;
    private javax.swing.JTextField apellidoPaterno;
    private javax.swing.JLabel apellidoPaternoError;
    private javax.swing.JLabel apellidoPaternoLabel;
    private javax.swing.JButton cancelar;
    private javax.swing.JPanel card;
    private javax.swing.JTextField correo;
    private javax.swing.JLabel correoError;
    private javax.swing.JLabel correoLabel;
    private javax.swing.JTextField deleteId;
    private javax.swing.JTextField direccion;
    private javax.swing.JLabel direccionError;
    private javax.swing.JLabel direccionLabel;
    private javax.swing.JTextField edad;
    private javax.swing.JLabel edadError;
    private javax.swing.JLabel edadLabel;
    private javax.swing.JButton eliminarPorId;
    private javax.swing.JButton eliminarRegistros;
    private javax.swing.JPanel formPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTextField nombre;
    private javax.swing.JLabel nombreError;
    private javax.swing.JLabel nombreLabel;
    private javax.swing.JButton regresar;
    private javax.swing.JComboBox<String> sexo;
    private javax.swing.JLabel sexoError;
    private javax.swing.JLabel sexoLabel;
    private javax.swing.JTable table;
    private javax.swing.JTextField telefono;
    private javax.swing.JLabel telefonoError;
    private javax.swing.JLabel telefonoLabel;
    private javax.swing.JLabel titulo;
    private javax.swing.JTextField updateId;
    private javax.swing.JLabel user;
    // End of variables declaration//GEN-END:variables
}
